services:
  # PostgreSQL Database
  db:
    image: postgres:14
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: coursehub
      POSTGRES_PASSWORD: coursehub
      POSTGRES_DB: coursehub
    volumes:
      - /mnt/elastic_file_system/database:/var/lib/postgresql/data
    restart: always

  # Redis
  redis:
    image: valkey/valkey:8.1-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - /mnt/elastic_file_system/redis:/data
    restart: always

  # Django Backend
  backend:
    image: 248631993760.dkr.ecr.us-east-1.amazonaws.com/coursehub-backend:feature-get-ready-to-deploy
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - /mnt/elastic_file_system/media:/coursehub_container/media
      - /mnt/elastic_file_system/static:/coursehub_container/static
    environment:
      DEBUG: False
      DJANGO_ENV: prod
      DJANGO_SETTINGS_MODULE: course_hub.settings
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: coursehub
      DB_USER: coursehub
      DB_PASSWORD: coursehub
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CELERY_BROKER_URL: redis://redis:6379/0
    depends_on:
      - db
      - redis
    restart: always

  # Next.js Frontend
  frontend:
    image: 248631993760.dkr.ecr.us-east-1.amazonaws.com/coursehub-frontend:feature-get-ready-to-deploy
    container_name: frontend
    command: ["npm", "run", "start:prod"]
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api/
      NEXT_PUBLIC_MEDIA_URL: http://localhost:8000
      NODE_ENV: production
      ENVIRONMENT: ${BUILD_ENV:-prod}
    depends_on:
      - backend
    restart: always
